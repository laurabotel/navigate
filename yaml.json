[
  [
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "name": "mafia-backend",
        "namespace": "mafia",
        "labels": {
          "name": "mafia-backend",
          "app": "mafia"
        }
      },
      "spec": {
        "replicas": 1,
        "selector": {
          "matchLabels": {
            "app": "mafia"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "mafia-backend",
              "app": "mafia"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "mafia-backend-container",
                "image": "taleodor/mafia-express@sha256:8328cd7de911367ef2a52a60f8696720e89c152c9a437983c7eccf411b0ede75",
                "env": [
                  {
                    "name": "REDIS_HOST",
                    "value": "redis-service.mafia"
                  }
                ],
                "ports": [
                  {
                    "containerPort": 3000
                  }
                ]
              }
            ]
          }
        }
      }
    }
  ],
  [
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "mafia-backend-service",
        "namespace": "mafia"
      },
      "spec": {
        "selector": {
          "app": "mafia",
          "name": "mafia-backend"
        },
        "ports": [
          {
            "protocol": "TCP",
            "port": 3000,
            "targetPort": 3000
          }
        ]
      }
    }
  ],
  [
    {
      "apiVersion": "v1",
      "kind": "Namespace",
      "metadata": {
        "name": "ingress-nginx",
        "labels": {
          "app.kubernetes.io/name": "ingress-nginx",
          "app.kubernetes.io/part-of": "ingress-nginx"
        }
      }
    },
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "nginx-configuration",
        "namespace": "ingress-nginx",
        "labels": {
          "app.kubernetes.io/name": "ingress-nginx",
          "app.kubernetes.io/part-of": "ingress-nginx"
        }
      }
    },
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "tcp-services",
        "namespace": "ingress-nginx",
        "labels": {
          "app.kubernetes.io/name": "ingress-nginx",
          "app.kubernetes.io/part-of": "ingress-nginx"
        }
      }
    },
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "udp-services",
        "namespace": "ingress-nginx",
        "labels": {
          "app.kubernetes.io/name": "ingress-nginx",
          "app.kubernetes.io/part-of": "ingress-nginx"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "name": "nginx-ingress-serviceaccount",
        "namespace": "ingress-nginx",
        "labels": {
          "app.kubernetes.io/name": "ingress-nginx",
          "app.kubernetes.io/part-of": "ingress-nginx"
        }
      }
    },
    {
      "apiVersion": "rbac.authorization.k8s.io/v1beta1",
      "kind": "ClusterRole",
      "metadata": {
        "name": "nginx-ingress-clusterrole",
        "labels": {
          "app.kubernetes.io/name": "ingress-nginx",
          "app.kubernetes.io/part-of": "ingress-nginx"
        }
      },
      "rules": [
        {
          "apiGroups": [
            ""
          ],
          "resources": [
            "configmaps",
            "endpoints",
            "nodes",
            "pods",
            "secrets"
          ],
          "verbs": [
            "list",
            "watch"
          ]
        },
        {
          "apiGroups": [
            ""
          ],
          "resources": [
            "nodes"
          ],
          "verbs": [
            "get"
          ]
        },
        {
          "apiGroups": [
            ""
          ],
          "resources": [
            "services"
          ],
          "verbs": [
            "get",
            "list",
            "watch"
          ]
        },
        {
          "apiGroups": [
            ""
          ],
          "resources": [
            "events"
          ],
          "verbs": [
            "create",
            "patch"
          ]
        },
        {
          "apiGroups": [
            "extensions",
            "networking.k8s.io"
          ],
          "resources": [
            "ingresses"
          ],
          "verbs": [
            "get",
            "list",
            "watch"
          ]
        },
        {
          "apiGroups": [
            "extensions",
            "networking.k8s.io"
          ],
          "resources": [
            "ingresses/status"
          ],
          "verbs": [
            "update"
          ]
        }
      ]
    },
    {
      "apiVersion": "rbac.authorization.k8s.io/v1beta1",
      "kind": "Role",
      "metadata": {
        "name": "nginx-ingress-role",
        "namespace": "ingress-nginx",
        "labels": {
          "app.kubernetes.io/name": "ingress-nginx",
          "app.kubernetes.io/part-of": "ingress-nginx"
        }
      },
      "rules": [
        {
          "apiGroups": [
            ""
          ],
          "resources": [
            "configmaps",
            "pods",
            "secrets",
            "namespaces"
          ],
          "verbs": [
            "get"
          ]
        },
        {
          "apiGroups": [
            ""
          ],
          "resources": [
            "configmaps"
          ],
          "resourceNames": [
            "ingress-controller-leader-nginx"
          ],
          "verbs": [
            "get",
            "update"
          ]
        },
        {
          "apiGroups": [
            ""
          ],
          "resources": [
            "configmaps"
          ],
          "verbs": [
            "create"
          ]
        },
        {
          "apiGroups": [
            ""
          ],
          "resources": [
            "endpoints"
          ],
          "verbs": [
            "get"
          ]
        }
      ]
    },
    {
      "apiVersion": "rbac.authorization.k8s.io/v1beta1",
      "kind": "RoleBinding",
      "metadata": {
        "name": "nginx-ingress-role-nisa-binding",
        "namespace": "ingress-nginx",
        "labels": {
          "app.kubernetes.io/name": "ingress-nginx",
          "app.kubernetes.io/part-of": "ingress-nginx"
        }
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "Role",
        "name": "nginx-ingress-role"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "nginx-ingress-serviceaccount",
          "namespace": "ingress-nginx"
        }
      ]
    },
    {
      "apiVersion": "rbac.authorization.k8s.io/v1beta1",
      "kind": "ClusterRoleBinding",
      "metadata": {
        "name": "nginx-ingress-clusterrole-nisa-binding",
        "labels": {
          "app.kubernetes.io/name": "ingress-nginx",
          "app.kubernetes.io/part-of": "ingress-nginx"
        }
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "ClusterRole",
        "name": "nginx-ingress-clusterrole"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "nginx-ingress-serviceaccount",
          "namespace": "ingress-nginx"
        }
      ]
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "name": "nginx-ingress-controller",
        "namespace": "ingress-nginx",
        "labels": {
          "app.kubernetes.io/name": "ingress-nginx",
          "app.kubernetes.io/part-of": "ingress-nginx"
        }
      },
      "spec": {
        "replicas": 1,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "ingress-nginx",
            "app.kubernetes.io/part-of": "ingress-nginx"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "ingress-nginx",
              "app.kubernetes.io/part-of": "ingress-nginx"
            },
            "annotations": {
              "prometheus.io/port": "10254",
              "prometheus.io/scrape": "true"
            }
          },
          "spec": {
            "terminationGracePeriodSeconds": 300,
            "serviceAccountName": "nginx-ingress-serviceaccount",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "containers": [
              {
                "name": "nginx-ingress-controller",
                "image": "quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0",
                "args": [
                  "/nginx-ingress-controller",
                  "--configmap=$(POD_NAMESPACE)/nginx-configuration",
                  "--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services",
                  "--udp-services-configmap=$(POD_NAMESPACE)/udp-services",
                  "--publish-service=$(POD_NAMESPACE)/ingress-nginx",
                  "--annotations-prefix=nginx.ingress.kubernetes.io"
                ],
                "securityContext": {
                  "allowPrivilegeEscalation": true,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ],
                    "add": [
                      "NET_BIND_SERVICE"
                    ]
                  },
                  "runAsUser": 101
                },
                "env": [
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "ports": [
                  {
                    "name": "http",
                    "containerPort": 80,
                    "protocol": "TCP"
                  },
                  {
                    "name": "https",
                    "containerPort": 443,
                    "protocol": "TCP"
                  }
                ],
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 10254,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 10
                },
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 10254,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 10
                },
                "lifecycle": {
                  "preStop": {
                    "exec": {
                      "command": [
                        "/wait-shutdown"
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "LimitRange",
      "metadata": {
        "name": "ingress-nginx",
        "namespace": "ingress-nginx",
        "labels": {
          "app.kubernetes.io/name": "ingress-nginx",
          "app.kubernetes.io/part-of": "ingress-nginx"
        }
      },
      "spec": {
        "limits": [
          {
            "min": {
              "memory": "90Mi",
              "cpu": "100m"
            },
            "type": "Container"
          }
        ]
      }
    }
  ],
  [
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "ingress-nginx",
        "namespace": "ingress-nginx",
        "labels": {
          "app.kubernetes.io/name": "ingress-nginx",
          "app.kubernetes.io/part-of": "ingress-nginx"
        }
      },
      "spec": {
        "type": "NodePort",
        "ports": [
          {
            "name": "http",
            "port": 80,
            "targetPort": 80,
            "protocol": "TCP"
          }
        ],
        "selector": {
          "app.kubernetes.io/name": "ingress-nginx",
          "app.kubernetes.io/part-of": "ingress-nginx"
        }
      }
    }
  ],
  [
    {
      "apiVersion": "networking.k8s.io/v1beta1",
      "kind": "Ingress",
      "metadata": {
        "name": "mafia-ingress",
        "namespace": "mafia",
        "annotations": {
          "nginx.ingress.kubernetes.io/rewrite-target": "/"
        }
      },
      "spec": {
        "rules": [
          {
            "http": {
              "paths": [
                {
                  "path": "/",
                  "backend": {
                    "serviceName": "mafia-ui-service",
                    "servicePort": 80
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ],
  [
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "redis-service",
        "namespace": "mafia"
      },
      "spec": {
        "selector": {
          "app": "mafia",
          "name": "redis"
        },
        "ports": [
          {
            "protocol": "TCP",
            "port": 6379,
            "targetPort": 6379
          }
        ]
      }
    }
  ],
  [
    {
      "apiVersion": "apps/v1",
      "kind": "StatefulSet",
      "metadata": {
        "name": "redis-stateful-set",
        "namespace": "mafia"
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app": "mafia"
          }
        },
        "replicas": 1,
        "serviceName": "redis",
        "template": {
          "metadata": {
            "labels": {
              "name": "redis",
              "app": "mafia"
            }
          },
          "spec": {
            "securityContext": {
              "fsGroup": 999
            },
            "containers": [
              {
                "name": "redis-container",
                "image": "redis:5.0.8-buster",
                "command": [
                  "redis-server",
                  "--bind",
                  "0.0.0.0"
                ],
                "ports": [
                  {
                    "containerPort": 6379
                  }
                ],
                "volumeMounts": [
                  {
                    "mountPath": "/data",
                    "name": "redis-data"
                  }
                ]
              }
            ]
          }
        },
        "volumeClaimTemplates": [
          {
            "metadata": {
              "name": "redis-data"
            },
            "spec": {
              "accessModes": [
                "ReadWriteOnce"
              ],
              "resources": {
                "requests": {
                  "storage": "32Gi"
                }
              }
            }
          }
        ]
      }
    }
  ],
  [
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "name": "mafia-ui",
        "namespace": "mafia",
        "labels": {
          "name": "mafia-ui",
          "app": "mafia"
        }
      },
      "spec": {
        "replicas": 1,
        "selector": {
          "matchLabels": {
            "app": "mafia"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "mafia-ui",
              "app": "mafia"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "mafia-ui-container",
                "image": "taleodor/mafia-vue@sha256:04be42ee28a9483166fb1bc0e66fa3f079c056cd2a4545411dfd5ca17b3b4fa2",
                "env": [
                  {
                    "name": "HUB_HOST",
                    "value": "mafia-backend-service.mafia"
                  },
                  {
                    "name": "HUB_PORT",
                    "value": "3000"
                  }
                ],
                "ports": [
                  {
                    "containerPort": 80
                  }
                ]
              }
            ]
          }
        }
      }
    }
  ],
  [
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "mafia-ui-service",
        "namespace": "mafia"
      },
      "spec": {
        "selector": {
          "app": "mafia",
          "name": "mafia-ui"
        },
        "ports": [
          {
            "protocol": "TCP",
            "port": 80,
            "targetPort": 80
          }
        ]
      }
    }
  ]
]